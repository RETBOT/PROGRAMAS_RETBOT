/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pa_2019_09_05_aplicacionproducto;

import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class JFrameLista extends javax.swing.JFrame {

    /**
     * Creates new form JFrameLista
     */
    
    DecimalFormat df = new DecimalFormat("#,###,##0.00");
    
    public JFrameLista() {
        initComponents();
        
        jTableProductos.setShowGrid(true); //agrega las lineas de la tabla 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();
        jSpinProd = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jButAleatorio = new javax.swing.JButton();
        jButCalcular = new javax.swing.JButton();
        jButPrecio = new javax.swing.JButton();
        jButAlfabetico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 0));

        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripcion", "Costo", "%Utilidad", "%Descuento", "% Impuesto", "$ Utilidad", "$ Descuento", "$ Impuesto", "Precio "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProductos.setSelectionForeground(new java.awt.Color(153, 255, 153));
        jScrollPane1.setViewportView(jTableProductos);
        if (jTableProductos.getColumnModel().getColumnCount() > 0) {
            jTableProductos.getColumnModel().getColumn(0).setPreferredWidth(130);
        }

        jSpinProd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinProdStateChanged(evt);
            }
        });

        jLabel1.setText("  Numero de Productos");

        jButAleatorio.setBackground(new java.awt.Color(255, 102, 0));
        jButAleatorio.setText("Aleatorio");
        jButAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAleatorioActionPerformed(evt);
            }
        });

        jButCalcular.setBackground(new java.awt.Color(51, 255, 51));
        jButCalcular.setText("Calcular");
        jButCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButCalcularActionPerformed(evt);
            }
        });

        jButPrecio.setText("Por Precio");
        jButPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButPrecioActionPerformed(evt);
            }
        });

        jButAlfabetico.setText("Alfabetico");
        jButAlfabetico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAlfabeticoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(jSpinProd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButAleatorio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButCalcular)
                        .addGap(213, 213, 213))))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButPrecio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButAlfabetico)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinProd)
                        .addComponent(jButAleatorio)
                        .addComponent(jButCalcular))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButAlfabetico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinProdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinProdStateChanged
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel)jTableProductos.getModel();
        modelo.setRowCount((int)jSpinProd.getValue());
        
    }//GEN-LAST:event_jSpinProdStateChanged

    private void jButAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAleatorioActionPerformed
        // TODO add your handling code here:
        //numeros random 
         Random azar = new Random();
        
        String [] desc = {"Televisión","mesa","Estereo","Bocina","aire acond","Microfono","Radio",
                          "Sala","Sillón","Librero"};
        
        double [] imp = {0,6,10,16,20,35,45.6};
        
        for(int r=0;r<jTableProductos.getRowCount();r++){
                jTableProductos.setValueAt(desc[azar.nextInt(desc.length)],r,0);
                jTableProductos.setValueAt(1+azar.nextInt(20)*500,r,1);
                jTableProductos.setValueAt(5+azar.nextInt(26),r,2);
                jTableProductos.setValueAt(azar.nextInt(16),r,3);
                jTableProductos.setValueAt(imp[azar.nextInt(imp.length)],r,4);
        }
    }//GEN-LAST:event_jButAleatorioActionPerformed

    private void jButCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButCalcularActionPerformed
        // TODO add your handling code here:
             Producto x = new Producto();
        for (int r=0;r<jTableProductos.getRowCount();r++){
            x.setCosto(Double.parseDouble(jTableProductos.getValueAt(r,1)+""));
            x.setPorcUtilidad(Double.parseDouble(jTableProductos.getValueAt(r,2)+""));
            x.setPorcDescuento(Double.parseDouble(jTableProductos.getValueAt(r,3)+""));
            x.setPorcImpuesto(Double.parseDouble(jTableProductos.getValueAt(r,1)+""));
             
             
            jTableProductos.setValueAt(df.format(x.importeUtilidad()), r, 5);
            jTableProductos.setValueAt(df.format(x.importeDescuento()), r, 6);
            jTableProductos.setValueAt(df.format(x.importeImpuesto()), r, 7);
            jTableProductos.setValueAt(df.format(x.precio()), r, 8);
        }
    }//GEN-LAST:event_jButCalcularActionPerformed

    private void jButPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButPrecioActionPerformed
        // TODO add your handling code here:
        
        // Creamos un arreglo de referencias a objetos de la clase producto de la misma
       
        // capacidad que el número de renglones del jTable
        Producto [] lista = new Producto[jTableProductos.getRowCount()];
       
        // creamos un objeto de cada renglón y lo guardamos en el arreglo 
        for (int r = 0; r<lista.length;r++){
         lista [r] = new Producto(jTableProductos.getValueAt(r,0)+"",
               Double.parseDouble(jTableProductos.getValueAt(r, 1)+""),
               Double.parseDouble(jTableProductos.getValueAt(r, 2)+""),
               Double.parseDouble(jTableProductos.getValueAt(r, 3)+""),
               Double.parseDouble(jTableProductos.getValueAt(r, 4)+""));
        }
        
        // ordenamos el arreglo de objetos
       //  Arrays.sort(lista); //No funciona con objetos (de momento)
        

        // ordenamos el arreglo por el metodo de la burbuja 
        for (int i=0; i<lista.length-1;i++)
            for (int j=i+1; j<lista.length; j++)
                if(lista[i].precio() < lista[j].precio()){
                    Producto aux = lista[i];
                    lista[i] = lista[j];
                    lista[j] = aux;
                }
        // regresamos los datos de los objetos al jTable, ya ordenados
        for (int r =0; r<lista.length;r++){
        jTableProductos.setValueAt( lista[r].getDescripcion(),r, 0);
        jTableProductos.setValueAt(lista[r].getCosto(), r, 1);
        jTableProductos.setValueAt(lista[r].getPorcUtilidad(), r, 2);
        jTableProductos.setValueAt(lista[r].getPorcDescuento(), r, 3);
        jTableProductos.setValueAt(lista[r].getPorcImpuesto(), r, 4);
        jTableProductos.setValueAt(df.format(lista[r].importeUtilidad()), r, 5);
        jTableProductos.setValueAt(df.format(lista[r].importeDescuento()), r, 6);
        jTableProductos.setValueAt(df.format(lista[r].importeImpuesto()), r, 7);
        jTableProductos.setValueAt(df.format(lista[r].precio()), r, 8);
        }
        
    }//GEN-LAST:event_jButPrecioActionPerformed

    private void jButAlfabeticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAlfabeticoActionPerformed
        // TODO add your handling code here:
        
         // capacidad que el número de renglones del jTable
        Producto [] lista = new Producto[jTableProductos.getRowCount()];
       
        // creamos un objeto de cada renglón y lo guardamos en el arreglo 
        for (int r = 0; r<lista.length;r++){
         lista [r] = new Producto(jTableProductos.getValueAt(r,0)+"",
               Double.parseDouble(jTableProductos.getValueAt(r, 1)+""),
               Double.parseDouble(jTableProductos.getValueAt(r, 2)+""),
               Double.parseDouble(jTableProductos.getValueAt(r, 3)+""),
               Double.parseDouble(jTableProductos.getValueAt(r, 4)+""));
        }

        // ordenamos el arreglo por el metodo de la burbuja 
        for (int i=0; i<lista.length-1;i++)
            for (int j=i+1; j<lista.length; j++)
            if(lista[i].getDescripcion().compareTo(lista[j].getDescripcion())>0){
                    Producto aux = lista[i];
                    lista[i] = lista[j];
                    lista[j] = aux;
                }
        // regresamos los datos de los objetos al jTable, ya ordenados
        for (int r =0; r<lista.length;r++){
        jTableProductos.setValueAt( lista[r].getDescripcion(),r, 0);
        jTableProductos.setValueAt(lista[r].getCosto(), r, 1);
        jTableProductos.setValueAt(lista[r].getPorcUtilidad(), r, 2);
        jTableProductos.setValueAt(lista[r].getPorcDescuento(), r, 3);
        jTableProductos.setValueAt(lista[r].getPorcImpuesto(), r, 4);
        jTableProductos.setValueAt(df.format(lista[r].importeUtilidad()), r, 5);
        jTableProductos.setValueAt(df.format(lista[r].importeDescuento()), r, 6);
        jTableProductos.setValueAt(df.format(lista[r].importeImpuesto()), r, 7);
        jTableProductos.setValueAt(df.format(lista[r].precio()), r, 8);
        }
        
    }//GEN-LAST:event_jButAlfabeticoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameLista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButAleatorio;
    private javax.swing.JButton jButAlfabetico;
    private javax.swing.JButton jButCalcular;
    private javax.swing.JButton jButPrecio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinProd;
    private javax.swing.JTable jTableProductos;
    // End of variables declaration//GEN-END:variables
}
